#!/bin/bash
# devenv - Centralized configuration management CLI
# Usage: devenv <command> [options]

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"
DEVENV_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
CONFIG_FILE="$DEVENV_DIR/config.yaml"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Utility functions
log_info() { echo -e "${BLUE}ℹ $1${NC}"; }
log_success() { echo -e "${GREEN}✅ $1${NC}"; }
log_warning() { echo -e "${YELLOW}⚠️  $1${NC}"; }
log_error() { echo -e "${RED}❌ $1${NC}" >&2; }

# Command: pull [target]
cmd_pull() {
    local target="${1:-all}"
    log_info "Pulling configurations from central repositories..."
    "$SCRIPT_DIR/sync-pull.sh" "$target"
}

# Command: push [target]
cmd_push() {
    local target="${1:-all}"
    log_info "Pushing changes to central repositories..."
    "$SCRIPT_DIR/sync-push.sh" "$target"
}

# Command: status
cmd_status() {
    log_info "Configuration sync status:"
    echo ""

    # Check if yq is available
    if ! command -v yq &> /dev/null; then
        log_error "yq is required but not installed. Install: https://github.com/mikefarah/yq"
        exit 1
    fi

    # Read sources from config.yaml
    for source_name in $(yq eval '.sources | keys | .[]' "$CONFIG_FILE"); do
        REPO=$(yq eval ".sources.$source_name.repo" "$CONFIG_FILE")
        TARGET=$(yq eval ".sources.$source_name.target" "$CONFIG_FILE")

        echo "📦 $source_name (synced from: $REPO)"
        echo "   Target: $TARGET"

        # Check if directory exists
        if [ ! -d "$PROJECT_ROOT/$TARGET" ]; then
            log_warning "Directory not found (run: devenv pull $source_name)"
            echo ""
            continue
        fi

        # Check for local modifications
        cd "$PROJECT_ROOT"
        if git diff --quiet "$TARGET" 2>/dev/null; then
            log_success "No local changes"
        else
            echo "   Status: 📝 Local modifications"
            git diff --stat "$TARGET" 2>/dev/null | sed 's/^/     /' || true
        fi

        echo ""
    done
}

# Command: help
cmd_help() {
    cat <<EOF
📦 DevEnv - Centralized Configuration Management

Usage: devenv <command> [options]

Commands:
  pull [target]         Pull updates from central repos (default: all)
  push [target]         Push local changes to central repos (default: all)
  status                Show sync status
  help                  Show this help message

Targets: devcontainer, claude, continue, all (default)

Examples:
  devenv pull              # Pull all configs
  devenv pull claude       # Pull only .claude configs
  devenv push claude       # Push .claude changes
  devenv status            # Check sync status

Configuration:
  Edit .devenv/config.yaml to configure repos and variables
  Edit .devenv/variables.env for secrets (gitignored)

For more info: see Setup - 04 - GitHub Environment centralized configuration across projects.md
EOF
}

# Main CLI router
case "${1:-help}" in
    pull)
        shift
        cmd_pull "$@"
        ;;
    push)
        shift
        cmd_push "$@"
        ;;
    status)
        cmd_status
        ;;
    help|--help|-h)
        cmd_help
        ;;
    *)
        log_error "Unknown command: $1"
        echo "Run 'devenv help' for usage"
        exit 1
        ;;
esac
